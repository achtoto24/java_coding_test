#1085

import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
		Scanner stdln = new Scanner(System.in);
        int x = stdln.nextInt();
        int y = stdln.nextInt();
        int w = stdln.nextInt();
        int h = stdln.nextInt();
        int[] arr = new int[4];

        arr[0] = x;
        arr[1] = w - x;
        arr[2] = y;
        arr[3] = h - y;

        int min = arr[0];
        for (int i = 1; i < 4; i++) {
            if (arr[i] < min)
                min = arr[i];
        }

        System.out.println(min);
    }
}

# 3009

import java.util.Scanner;

public class Main {
    static int compare(int[] arr) {
        if (arr[0] == arr[1])
            return arr[2];
        else {
            if (arr[0] == arr[2])
                return arr[1];
            else
                return arr[0];
        }
    }
    public static void main(String[] args) {
		Scanner stdln = new Scanner(System.in);
        int[] w = new int[3];
        int[] h = new int[3];

        for (int i = 0; i < 3; i++) {
            int x = stdln.nextInt();
            w[i] = x;
            int y = stdln.nextInt();
            h[i] = y;
        }

        int x = compare(w);
        int y = compare(h);

        System.out.printf("%d %d\n", x, y);

    }
}

#15894

import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
		Scanner stdln = new Scanner(System.in);
        int len = stdln.nextInt();

        System.out.println(len + len * 3);
    }
}

#9063

import java.util.Scanner;
 
public class Main {
	static int max(int arr[], int cnt) {
		int max = arr[0];
		for (int i = 1; i < cnt; i++) {
			if(arr[i] > max)
				max = arr[i];
		}
		return max;
	}

	static int min(int arr[], int cnt) {
		int min = arr[0];
		for (int i = 1; i < cnt; i++) {
			if(arr[i] < min)
				min = arr[i];
		}
		return min;
	}

	public static void main(String[] args) {
		Scanner stdln = new Scanner(System.in);
		int cnt = stdln.nextInt();
        int[] xp = new int[cnt];
        int[] yp = new int[cnt];

		for (int i = 0; i < cnt; i++) {
            int x = stdln.nextInt();
            xp[i] = x;
            int y = stdln.nextInt();
            yp[i] = y;
        }

		if (cnt == 1) {
            System.out.println(0);
            return;
        }

		int max1 = max(xp, cnt);
		int min1 = min(xp, cnt);
		int max2 = max(yp, cnt);
		int min2 = min(yp, cnt);
		
        if (max1 == min1 || max2 == min2)
            System.out.println(0);
        else
            System.out.println((max1 - min1) * (max2 - min2));

	}
}

#5073 

import java.util.Scanner;
 
public class Main {
    
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        
        while (true) {
            int side1 = sc.nextInt();
            int side2 = sc.nextInt();
            int side3 = sc.nextInt();
            
            // 입력이 0 0 0인 경우 종료
            if (side1 == 0 && side2 == 0 && side3 == 0) {
                break;
            }
            
            // 가장 긴 변의 길이 구하기
            int maxSide = Math.max(Math.max(side1, side2), side3);
            
            // 삼각형 조건을 만족하는지 확인
            if (maxSide < side1 + side2 + side3 - maxSide) {
                if (side1 == side2 && side2 == side3) {
                    System.out.println("Equilateral");
                } else if (side1 == side2 || side2 == side3 || side1 == side3) {
                    System.out.println("Isosceles");
                } else {
                    System.out.println("Scalene");
                }
            } else {
                System.out.println("Invalid");
            }
        }
    }
    
}

#14125

import java.util.Scanner;
 
public class Main {
    
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int side1 = sc.nextInt();
        int side2 = sc.nextInt();
        int side3 = sc.nextInt();
        
        // 가장 긴 변의 길이 구하기
        int maxSide = Math.max(Math.max(side1, side2), side3);
        
        // 삼각형 조건을 만족하는지 확인
        if (maxSide < side1 + side2 + side3 - maxSide) {
            System.out.println(side1 + side2 + side3);
            }
        else {
            int sum = side1 + side2 + side3 - maxSide;
            System.out.println(2 * sum - 1);
        }
        
    }
    
}


